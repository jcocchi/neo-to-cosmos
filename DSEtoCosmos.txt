// DSE VERTEX EXAMPLE
{
    "id":{      // Our id is just these three concatenated
        "~label":"label_name",
        "community_id":1234567890,
        "member_id":01
    },
    "label":"label_name",
    "type":"vertex",        // We don't need a type label in Cosmos, only verticies are labeled with _isEdge = true
    "properties":{      // We don't need a properties object in Cosmos, just list each one directly
        "prop_name":[{
            "id":{
                "~label":"prop_name",       // This is a copy of the prop name object, we don't need this info again in Cosmos
                "~out_vertex":{     // This is just a copy of the vertex id, we don't need this info again in Cosmos
                    "~label":"label_name",
                    "community_id":1234567890,
                    "member_id":01
                },
                "~local_id":"00000000-0000-1020-0000-000000000000"      // What is this local id from?
            },
            "value":"prop_value"
        }]
    }
}

// COSMOS VERTEX TRANSFORMATION
{
    "id":"label_name123456789001",
    "label":"label_name",
    "prop_name":[{
        "id":"random guid",     // Should this be derived from the DSE prop id somehow like the document id or is a random guid acceptable?
        "_value":"prop_value"
    }]
}


// DSE EDGE EXAMPLE
{
    "id":{
        "~label":"edge_label",
        "~out_vertex":{
            "~label":"out_vertex_label",
            "community_id":out_vertex_community_id,
            "member_id":out_vertex_member_id
        },
        "~in_vertex":{
            "~label":"in_vertex_label",
            "community_id":in_vertex_community_id,
            "member_id":in_vertex_member_id
        },
        "~local_id":"random guid"
    },
    "label":"edge_label",
    "type":"edge",
    "inVLabel":"in_vertex_label",
    "outVLabel":"out_vertex_label",
    "inV":{
        "~label":"in_vertex_label",
        "community_id":in_vertex_community_id,
        "member_id":in_vertex_member_id
    },
    "outV":{
        "~label":"out_vertex_label",
        "community_id":out_vertex_community_id,
        "member_id":out_vertex_member_id
    },
    "properties":{
        "propName":"propValue"
    }
}

// COSMOS EDGE TRANSFORMATION
{
    "label":"edge_label",
    "propName": "propValue",
    "_isEdge":true,
    "_vertexId":"out_vertex_label + out_vertex_community_id + out_vertex_member_id",        // This is how the vertex id is set up for the Cosmos transformation
    "_vertexLabel":"out_vertex_label",
    "_sink":"in_vertex_label + in_vertex_community_id + in_vertex_member_id",
    "_sinkLabel":"in_vertex_label"
}
